area:
  template:
    - sound_area
    - base
  tap_action:
    haptic: medium
  custom_fields:
    circle: >
      [[[
        var temperature;
        if (variables.sensor.substring(0,6) == 'sensor') {
          temperature = Math.round(states[variables.sensor].state);
        }
        else {
          temperature = Math.round(states[variables.sensor].attributes.current_temperature);
        }
        if (variables.state_on) {
          return `<svg viewBox="0 0 50 50">
                    <style>
                      circle {
                        transform: rotate(-90deg);
                        transform-origin: 50% 50%;
                      }
                      tspan {
                        font-size: 10px;
                      }
                    </style>
                    <circle cx="25" cy="25" r="20.5" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                    <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${temperature}<tspan font-size="10">째C</tspan></text>
                  </svg>`; 
        }
        return `<svg viewBox="0 0 50 50">
                  <style>
                    circle {
                      transform: rotate(-90deg);
                      transform-origin: 50% 50%;
                    }
                    tspan {
                      font-size: 10px;
                    }
                  </style>
                  <circle cx="25" cy="25" r="20.5" stroke="#b2b2b2" stroke-width="0" fill="#FFFFFF08" />
                  <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${temperature}<tspan font-size="10">째C</tspan></text>
                </svg>`; 
      ]]]
  styles:
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -3%
        - margin-top: 1%
      circle:
        - display: initial
        - width: 90%
        - letter-spacing: 0.03vw
        - margin: -6% -6% 0 0
        - justify-self: end
        - opacity: 1

area2:
  template:
    - tilt
    - extra_styles
  aspect_ratio: 1/1
  show_state: true
  show_icon: false
  state_display: >
    [[[ if (variables.state === true) return variables.translate_unknown; ]]]
  custom_fields:
    circle: >
      [[[
        var temperature;
        if (variables.sensor.substring(0,6) == 'sensor') {
          temperature = Math.round(states[variables.sensor].state);
        }
        else {
          temperature = Math.round(states[variables.sensor].attributes.current_temperature);
        }
        if (variables.state_on) {
          return `<svg viewBox="0 0 50 50">
                    <style>
                      circle {
                        transform: rotate(-90deg);
                        transform-origin: 50% 50%;
                      }
                      tspan {
                        font-size: 10px;
                      }
                    </style>
                    <circle cx="25" cy="25" r="20.5" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                    <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${temperature}<tspan font-size="10">째C</tspan></text>
                  </svg>`; 
        }
        return `<svg viewBox="0 0 50 50">
                  <style>
                    circle {
                      transform: rotate(-90deg);
                      transform-origin: 50% 50%;
                    }
                    tspan {
                      font-size: 10px;
                    }
                  </style>
                  <circle cx="25" cy="25" r="20.5" stroke="#b2b2b2" stroke-width="0" fill="#FFFFFF08" />
                  <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${temperature}<tspan font-size="10">째C</tspan></text>
                </svg>`; 
      ]]]
  tap_action:
    card_bounce: |
      [[[
        // add animation
        if (this.getElementsByTagName("style").length === 0) {

            // phone condition
            let mq = window.matchMedia('(max-width: 800px)').matches;

            let style = document.createElement('style');

            style.innerHTML = `
                @keyframes card_bounce {
                    0%   { transform: scale(1); }
                    10%  { transform: scale(${ mq ? '0.92' : '0.94' }); }
                    25%  { transform: scale(1); }
                    30%  { transform: scale(${ mq ? '0.96' : '0.98' }); }
                    100% { transform: scale(1); }
                }
            `;

            this.appendChild(style);
        }

        // duration
        let duration = 800;

        // animate
        this.style.animation = `card_bounce ${duration}ms cubic-bezier(0.22, 1, 0.36, 1)`;

        // reset
        window.setTimeout(() => { this.style.animation = "none"; }, duration + 100)
      ]]]
    action: toggle
    haptic: medium
  hold_action:
    haptic: success
    action: more-info
  styles:
    grid:
      - grid-template-areas: |
          "icon  circle"
          "n     n"
          "s     s"
      - grid-template-columns: repeat(2, 1fr)
      - grid-template-rows: auto repeat(2, min-content)
      - gap: 1.3%
      - align-items: start
      - will-change: transform
    name:
      - justify-self: start
      - line-height: 121%
    state:
      - justify-self: start
      - line-height: 115%
    card:
      - border-radius: var(--button-card-border-radius)
      - border-width: 0
      - -webkit-tap-highlight-color: rgba(0,0,0,0)
      - transition: none
      - --mdc-ripple-color: >
          [[[
            return variables.state_on
                ? 'rgb(0, 0, 0)'
                : '#97989c';
          ]]]
      - color: >
          [[[
            return variables.state_on
                ? '#4b5254'
                : '#97989c';
          ]]]
      - background-color: >
          [[[
            return variables.state_on
                ? 'rgba(255, 255, 255, 0.85)'
                : 'rgba(115, 115, 115, 0.25)';
          ]]]
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -3%
        - margin-top: 1%
      circle:
        - display: initial
        - width: 90%
        - letter-spacing: 0.03vw
        - margin: -6% -6% 0 0
        - justify-self: end
        - opacity: 1
