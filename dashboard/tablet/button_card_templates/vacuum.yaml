vacuum:
  template:
    - base
    - sound_popup_only
  tap_action:
    haptic: medium
    action: more-info
  double_tap_action:
    action: block
  variables:
    state_on: >-
      [[[
        if (entity.state === 'cleaning' || entity.state == 'error' || entity.state == 'returning') {
          return true;
        }
        return false;
      ]]]
  custom_fields:
    icon: >
      [[[
        if (entity.state === 'cleaning') {
          return `<svg viewBox="0 0 24 24">
            <path fill="#9da0a2" d="M12 2c2.65 0 5.19 1.06 7.07 2.93l-1.42 1.42A7.994 7.994 0 0 0 12 4c-2.12 0-4.16.84-5.65 2.35L4.93 4.93C6.81 3.06 9.35 2 12 2M3.66 6.5l1.45 1.44A8.043 8.043 0 0 0 4 12a8 8 0 0 0 8 8a8 8 0 0 0 8-8c0-1.43-.39-2.83-1.12-4.06l1.46-1.44A9.93 9.93 0 0 1 22 12a10 10 0 0 1-10 10A10 10 0 0 1 2 12c0-1.96.58-3.88 1.66-5.5M12 6a6 6 0 0 1 6 6c0 1.59-.63 3.12-1.76 4.24l-1.41-1.41a4.004 4.004 0 0 1-5.66 0l-1.41 1.41A5.97 5.97 0 0 1 6 12a6 6 0 0 1 6-6m0 2a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1a1 1 0 0 0-1-1Z"/>
          </svg>`
        }
        if (entity.state == 'error' || entity.state == 'unknown') {
          return `<svg viewBox="0 0 24 24">
            <path fill="#9da0a2"  d="M10 2c2.6 0 5.2 1.1 7.1 2.9l-1.4 1.4C14.1 4.8 12.1 4 10 4s-4.2.8-5.7 2.3L2.9 4.9C4.8 3.1 7.4 2 10 2M1.7 6.5l1.5 1.4C2.4 9.2 2 10.6 2 12c0 4.4 3.6 8 8 8s8-3.6 8-8c0-1.4-.4-2.8-1.1-4.1l1.5-1.4C19.4 8.1 20 10 20 12c0 5.5-4.5 10-10 10S0 17.5 0 12c0-2 .6-3.9 1.7-5.5M10 6c3.3 0 6 2.7 6 6c0 1.6-.6 3.1-1.8 4.2l-1.4-1.4c-.7.8-1.7 1.2-2.8 1.2s-2.1-.4-2.8-1.2l-1.4 1.4C4.6 15.1 4 13.6 4 12c0-3.3 2.7-6 6-6m0 2c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1m12 4V7h2v6h-2m0 4v-2h2v2h-2Z"/>
          </svg>`
        }
        if (entity.state == 'unavailable') {
          return `<svg viewBox="0 0 24 24">
            <path fill="#9da0a2"  d="M20.8 22.7L18 19.9c-1.7 1.3-3.8 2.1-6 2.1c-5.5 0-10-4.5-10-10c0-2 .6-3.9 1.7-5.5l1.5 1.4C4.4 9.2 4 10.6 4 12c0 4.4 3.6 8 8 8c1.7 0 3.3-.6 4.6-1.5l-2.9-2.9c-.5.3-1.1.4-1.7.4c-1.1 0-2.1-.4-2.8-1.2l-1.4 1.4C6.6 15.1 6 13.6 6 12c0-1.2.3-2.3.9-3.2L1.1 3l1.3-1.3l19.7 19.7l-1.3 1.3M20 12c0 1.4-.4 2.7-1 3.8l1.5 1.5c1-1.5 1.5-3.3 1.5-5.3s-.6-3.9-1.7-5.5l-1.5 1.4c.8 1.3 1.2 2.7 1.2 4.1m-8-8c2.1 0 4.2.8 5.7 2.3l1.4-1.4C17.2 3.1 14.7 2 12 2c-1.9 0-3.7.5-5.3 1.5L8.2 5c1.1-.7 2.5-1 3.8-1m5.5 10.3c.3-.7.5-1.5.5-2.3c0-3.3-2.7-6-6-6c-.8 0-1.6.2-2.3.5l1.7 1.7c.2-.1.4-.2.6-.2c.6 0 1 .4 1 1c0 .2-.1.4-.2.6l4.7 4.7Z"/>
          </svg>`
        }
        return `<svg viewBox="0 0 24 24">
          <path fill="#9da0a2" d="M12 2c2.65 0 5.19 1.06 7.07 2.93l-1.42 1.42A7.994 7.994 0 0 0 12 4c-2.12 0-4.16.84-5.65 2.35L4.93 4.93C6.81 3.06 9.35 2 12 2M3.66 6.5l1.45 1.44A8.043 8.043 0 0 0 4 12a8 8 0 0 0 8 8a8 8 0 0 0 8-8c0-1.43-.39-2.83-1.12-4.06l1.46-1.44A9.93 9.93 0 0 1 22 12a10 10 0 0 1-10 10A10 10 0 0 1 2 12c0-1.96.58-3.88 1.66-5.5M12 6a6 6 0 0 1 6 6c0 1.59-.63 3.12-1.76 4.24l-1.41-1.41a4.004 4.004 0 0 1-5.66 0l-1.41 1.41A5.97 5.97 0 0 1 6 12a6 6 0 0 1 6-6m0 2a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1a1 1 0 0 0-1-1Z"/>
        </svg>`
      ]]]
    circle: >
      [[[
        if (entity.state == 'unavailable') {
          return '';
        }
        const radius = 20.5;
        const input = entity.attributes.battery_level == null ? ' ' : `${parseInt(entity.attributes.battery_level)}`;
        if (entity.state === 'cleaning' || entity.state == 'error' || entity.state == 'returning') {
          const circumference = radius * 2 * Math.PI;
          return `
            <svg viewBox="0 0 50 50">
              <style>
                circle {
                  transform: rotate(-90deg);
                  transform-origin: 50% 50%;
                  stroke-dasharray: ${circumference};
                  stroke-dashoffset: ${circumference - input / 100 * circumference};
                }
                tspan {
                  font-size: 10px;
                }
              </style>
              <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
              <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
            </svg>
          `;
        } else if ((entity.attributes.battery_icon.indexOf('charging') + 1) && entity.attributes.battery_level !=100) {
          return `
            <svg viewBox="0 0 50 50">
              <style>
                circle {
                  transform: rotate(-90deg);
                  transform-origin: 50% 50%;
                }
                tspan {
                  font-size: 10px;
                }
              </style>
              <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="0" fill="#FFFFFF08" />
              <path fill="#8d8e90" d="M12.8,20.3c0.1,0.1,0.2,0.2,0.1,0.4l-1.1,3.7h2.1c0.2,0,0.3,0.1,0.3,0.3c0,0.1,0,0.2-0.1,0.2l-5,5.3 c-0.1,0.1-0.3,0.1-0.4,0c-0.1-0.1-0.1-0.2-0.1-0.3l1.1-3.7H7.6c-0.2,0-0.3-0.1-0.3-0.3c0-0.1,0-0.2,0.1-0.2l5-5.3 C12.5,20.3,12.6,20.2,12.8,20.3L12.8,20.3z"/>
              <text x="57%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
            </svg>
          `;
        } else {
          return `
            <svg viewBox="0 0 50 50">
              <style>
                circle {
                  transform: rotate(-90deg);
                  transform-origin: 50% 50%;
                }
                tspan {
                  font-size: 10px;
                }
              </style>
              <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="0" fill="#FFFFFF08" />
              <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
            </svg>
          `;
        }
      ]]]
  styles:
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -3%
        - margin-top: 1%
      name:
        - justify-self: start
        - line-height: 121%
      circle:
        - display: initial
        - width: 90%
        - letter-spacing: 0.03vw
        - margin: -6% -6% 0 0
        - justify-self: end
        - opacity: 1
  state_display: >-
    [[[
      if (entity.state == 'docked') {
        return '停靠';
      }
      if (entity.state == 'idle') {
        return '待机中';
      }
      if (entity.state == 'cleaning') {
        return '正在清扫';
      }
      if (entity.state == 'returning') {
        return '返回清洁座';
      }
      if (entity.state == 'unavailable') {
        return '不可用';
      }
      if (entity.state == 'paused') {
        return '已暂停';
      }
      if (entity.state == 'unknown') {
        return '未知';
      }
      if (entity.state == 'error') {
        if (entity.attributes.last_error == 'None (301)') {
          return '清水不足';
        }
        if (entity.attributes.last_error == 'None (302)') {
          return '污水已满';
        }
        if (entity.attributes.last_error == 'None (103)') {
          return '运行困难';
        }
        if (entity.attributes.last_error == 'None (129)') {
          return '被缠绕';
        }
        return '错误';
      }
      return entity.state;
    ]]]